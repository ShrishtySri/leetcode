//f:f:f:f:f:f:f:f
class Solution {
public:
    bool validFour(string s){
        int n=s.length();
        if(n==0) return false;
        if(n>3) return false;
        if(s.front()=='0'&&n>1) return false;
        for(int i=0;i<n;i++){
            if(!isdigit(s[i]))
                return false;
        }
        int val = stoi(s);
        return (val>=0&&val<=255);
    }
    
    bool validSix(string s){
       int n=s.length(); 
        if(n==0) return false;
        if(n>4) return false;
        for(int i=0;i<n;i++){
            if(!isalnum(s[i]))
                return false;
            if (isalpha(s[i]) && tolower(s[i]) > 'f') 
                return false;   
                
        }
        return true;
    }
    string validIPAddress(string IP) {
        int n=IP.length();
        string ans="Neither";
        if(n<16){
            vector<string> res;
            int i=0;
            string str="";
            while(i<n){
                if(IP[i]=='.'){
                    res.push_back(str);
                    str="";
                }else{
                    str+=IP[i];
                   // cout<<str<<" ";
                }
                i++;
            }
            //cout<<str<<" ";
            res.push_back(str);
            int flag=0;
            for(int i=0;i<res.size();i++){
                if(!validFour(res[i])){
                    flag=1;
                    break;
                }
            }
            if(flag==0&&res.size()==4)
                ans="IPv4";

        }else{
            vector<string> res;
            int i=0;
            string str="";
            while(i<n){
                if(IP[i]==':'){
                    res.push_back(str);
                    str="";
                }else{
                    str+=IP[i];
                }
                i++;
            }
            res.push_back(str);
            int flag=0;
            for(int i=0;i<res.size();i++){
                cout<<res[i]<<" ";
                if(!validSix(res[i])){
                    flag=1;
                    break;
                }
            }
            if(flag==0&&res.size()==8)
                ans="IPv6";
        }
        return ans;
    }
};

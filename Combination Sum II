class Solution {
public:
    void helper(vector<int>& candidates, int target,vector<int>&current, int index,           set<vector<int>>& ans){
        if(target == 0){
            ans.insert(current);
            return;
        }
        
        for(int i=index; i<candidates.size();i++){
            if (target >= candidates[i]){
                current.push_back(candidates[i]);
                helper(candidates, target-candidates[i],current,i+1,ans);
                current.pop_back();
            }
        }
    }
    
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        set<vector<int>> ans;
        vector<int> current;
        sort(candidates.begin(),candidates.end());
        helper(candidates,target,current,0,ans);
        vector<vector<int>>v;
        for(auto x: ans){
            v.push_back(x);
        }
        return v;
    }
};

class Solution {
public:
    map<string, bool> m;
    bool solve(set<string> dict, string s) {
        if(dict.find(s)!=dict.end())
            return true;
        
        if(m.find(s) != m.end())
            return m[s];
        
        for(int i=0; i<s.size(); i++)  {
            string left= s.substr(0, i);
            string right= s.substr(i);
            if(dict.find(left) !=dict.end()) {
                if(solve(dict, right))
                    return m[s]=true;
            }
        }
        
        return m[s]= false;
    }
    
    bool wordBreak(string s, vector<string>& wordDict) {
        set<string> dict;
        for(int i=0; i<wordDict.size(); i++) {
            dict.insert(wordDict[i]);
        }
        return solve(dict, s);
    }
};
